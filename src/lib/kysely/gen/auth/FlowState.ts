// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { CodeChallengeMethod } from './CodeChallengeMethod';
import type { ColumnType, Selectable, Insertable, Updateable } from 'kysely';

/** Identifier type for auth.flow_state */
export type AuthFlowStateId = string;

/**
 * Represents the table auth.flow_state
 * stores metadata for pkce logins
 */
export interface FlowStateTable {
  id: ColumnType<AuthFlowStateId, AuthFlowStateId, AuthFlowStateId>;

  userId: ColumnType<string | null, string | null, string | null>;

  authCode: ColumnType<string, string, string>;

  codeChallengeMethod: ColumnType<CodeChallengeMethod, CodeChallengeMethod, CodeChallengeMethod>;

  codeChallenge: ColumnType<string, string, string>;

  providerType: ColumnType<string, string, string>;

  providerAccessToken: ColumnType<string | null, string | null, string | null>;

  providerRefreshToken: ColumnType<string | null, string | null, string | null>;

  createdAt: ColumnType<Date | null, Date | string | null, Date | string | null>;

  updatedAt: ColumnType<Date | null, Date | string | null, Date | string | null>;

  authenticationMethod: ColumnType<string, string, string>;

  authCodeIssuedAt: ColumnType<Date | null, Date | string | null, Date | string | null>;
}

export type FlowState = Selectable<FlowStateTable>;

export type NewFlowState = Insertable<FlowStateTable>;

export type FlowStateUpdate = Updateable<FlowStateTable>;
